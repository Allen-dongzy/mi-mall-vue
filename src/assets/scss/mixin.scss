/*
 * @version     : 0.0.1
 * @Author      : 董正阳
 * @Date        : 2020-02-18 17:00:52
 * @LastEditors: 董正阳
 * @LastEditTime: 2020-03-18 17:20:10
 * @Description : 
 */
// 宽度容器
@mixin box-w($w, $background:transparent, $dis:block) {
  width     : $w;
  box-sizing: border-box;
  background: $background;
  display   : $dis;
}

// 高度容器
@mixin box-h($h, $background:transparent, $dis:block) {
  height    : $h;
  box-sizing: border-box;
  background: $background;
  display   : $dis;
}

// 块级自定义容器
@mixin box($w, $h, $background:transparent, $dis:block) {
  width     : $w;
  height    : $h;
  box-sizing: border-box;
  background: $background;
  display   : $dis;
}

// 行块级自定义容器
@mixin box-i($w, $h, $background:transparent) {
  width     : $w;
  height    : $h;
  box-sizing: border-box;
  background: $background;
  display   : inline-block;
}

// 行块级自定义容器-宽度
@mixin box-i-w($w, $background:transparent) {
  width     : $w;
  box-sizing: border-box;
  background: $background;
  display   : inline-block;
}

// 边距盒子
@mixin edge($m:0, $p:0) {
  margin : $m;
  padding: $p;
}

// 弹性盒子容器-row
@mixin flex-row($jc:center, $c:center) {
  display        : flex;
  justify-content: $jc;
  align-items    : $c;
}

// 弹性盒子-换行
@mixin flex-wrap($jc:flex-start, $c:center) {
  @include flex-row($jc, $c:center);
  flex-wrap                : wrap
}

// 弹性盒子容器-col
@mixin flex-col($jc:center, $c:center) {
  display        : flex;
  flex-direction : column;
  justify-content: $jc;
  align-items    : $c;
}

// 文字超出隐藏-单行
@mixin font-one() {
  display      : block;
  text-overflow: ellipsis;
  white-space  : nowrap;
  overflow     : hidden;
}

// 文字超出隐藏-多行
@mixin font-hide($n:1) {
  display           : -webkit-box;
  -webkit-line-clamp: $n;
  -webkit-box-orient: vertical;
  overflow          : hidden;
  text-overflow     : ellipsis;
}

// 文字属性设置
@mixin font-set($size:inherit, $color:#333, $weight:normal, $style:normal, $family:'FZLanTingHeiS-R-GB,黑体,宋体') {
  font : $style $weight $size/normal $family;
  color: $color;
}

// 元素无法选中（乱点不会出现蓝色的背景块）
@mixin el-hide() {
  -moz-user-select   : none;
  -webkit-user-select: none;
  -ms-user-select    : none;
  -khtml-user-select : none;
  user-select        : none;
}

// 保留文字换行格式
@mixin wrapper() {
  white-space: pre-wrap;
}

// 背景图片
@mixin bg($url, $size:cover, $position:center, $repeat:no-repeat) {
  background: url($url) $repeat $position/$size
}

// 渐变
@mixin gradient($c1, $c2, $dire:to right) {
  background: linear-gradient($dire, $c1, $c2);
}

// 细线-水平
@mixin border-w($c: #ddd, $n: .5) {
  width                   : 100%;
  height                  : 1px;
  border-top              : 1px solid $c;
  color                   : $c;
  -webkit-transform-origin: 0 0;
  transform-origin        : 0 0;
  -webkit-transform       : scaleY($n);
  transform               : scaleY($n);
}

// 细线-垂直
@mixin border-h($c: #ddd, $n: .5) {
  width                   : 1px;
  height                  : 100%;
  border-left             : 1px solid $c;
  color                   : $c;
  -webkit-transform-origin: 0 0;
  transform-origin        : 0 0;
  -webkit-transform       : scaleY($n);
  transform               : scaleY($n);
}

// 方块
@mixin square($w, $background:transparent) {
  @include box($w, $w, $background);
}

// 方块-行内块
@mixin square-i($w, $background:transparent) {
  @include box-i($w, $w, $background);
}

// 圆形
@mixin circle($w, $background:transparent) {
  @include square($w, $background);
  border-radius: 50%;
}

// 圆形-行内块
@mixin circle-i($w, $background:transparent) {
  @include square-i($w, $background);
  border-radius: 50%;
}

// 非弹性盒子垂直居中(父容器高度已知)
@mixin vertical() {
  position : relative;
  top      : 50%;
  transform: translateY(-50%);
}

// 相对定位
@mixin relative() {
  position: relative;
}

// 绝对定位
@mixin absolute() {
  position: absolute;
}

// 固定定位
@mixin fixed() {
  position: fixed;
}

// 定位1
@mixin position1($param1:0, $param2:0) {
  left: $param1;
  top : $param2;
}

// 定位2
@mixin position2($param1:0, $param2:0) {
  right: $param1;
  top  : $param2;
}

// 定位3
@mixin position3($param1:0, $param2:0) {
  right : $param1;
  bottom: $param2;
}

// 定位4
@mixin position4($param1:0, $param2:0) {
  left  : $param1;
  bottom: $param2;
}